:PROPERTIES:
:CATEGORY: emacs-insta-pocket
:END:

* TODO add folder delete

* TODO improve caching 

* TODO custom limit
* DONE modify list in place
CLOSED: [2025-09-05 Fri 13:03]
delete then insert

(defun tabulated-list-delete-entry ()
  "Delete the Tabulated List entry at point.
Return a list (ID COLS), where ID is the ID of the deleted entry
and COLS is a vector of its column descriptors.  Move point to
the beginning of the deleted entry.  Return nil if there is no
entry at point.

This function only changes the buffer contents; it does not alter
`tabulated-list-entries'."
  ;; Assume that each entry occupies one line.
  (let* ((id (tabulated-list-get-id))
	 (cols (tabulated-list-get-entry))
	 (inhibit-read-only t))
    (when cols
      (delete-region (pos-bol) (1+ (pos-eol)))
      (list id cols))))

["2025-09-04" "archive" "" "" ("" face link help-echo "https://thehill.com/homenews/senate/5485147-mcconnell-theres-certain-similarities-right-now-to-the-30s/")]
(tabulated-list-print-entry 1 ["2025-09-04" "archive" "" "" ("" face link help-echo "wat")])

(defun insta-pocket--modify-entry (idx val)
  "Modify the column IDX with VAL.
IDX start from 0. This deletes the entry and put it back"
  ;; manualy delete and add modify entry
  (when-let* ((point-org (point))
              (entry (tabulated-list-delete-entry)))
    (tabulated-list-print-entry (car entry)
                                (let ((cols (cadr entry)))
                                  (aset cols idx val)
                                  cols))
    (goto-char point-org)))
* TODO bookmark details
* TODO batch action
